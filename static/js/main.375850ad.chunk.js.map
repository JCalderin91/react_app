{"version":3,"sources":["components/Task/Task.js","store/actions/tasks.js","components/Tasks/Tasks.js","components/TaskForm/TaskForm.js","store/types/tasks.js","pages/Home/Home.js","pages/NotFound/NotFound.js","store/reducers/tasks.js","store/reducers/index.js","store/store.js","App.js","index.js"],"names":["Task","task","this","props","react_default","a","createElement","className","type","checked","done","onChange","toggleTask","bind","id","style","textDecoration","color","title","onClick","removeTask","description","Component","connect","dispatch","payload","Tasks","tasks","map","components_Task_Task","key","list","length","Fragment","state","TaskForm","onSubmit","e","preventDefault","_this","addTask","setState","_e$target","target","name","value","Object","defineProperty","placeholder","aria-label","Home","components_TaskForm_TaskForm","components_Tasks_Tasks","NotFound","initialState","arguments","undefined","_ref","objectSpread","concat","toConsumableArray","filter","combineReducers","createStore","reducers","App","es","store","react_router_dom","basename","process","react_router","exact","path","component","container","document","getElementById","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.375850ad.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { removeTask, toggleTask } from \"../../store/actions/tasks\";\r\n\r\nclass Task extends Component {\r\n\r\n  render(){\r\n    const {task} = this.props;\r\n    \r\n    const doneStyles = {\r\n      textDecoration: 'line-through',\r\n      color: 'gray',\r\n    }   \r\n    \r\n    return (\r\n      <li className=\"list-group-item\">\r\n        <div>\r\n          <input type=\"checkbox\" checked={task.done} onChange={this.props.toggleTask.bind(this, task.id)} className=\"mr-2\" />\r\n          <span style={task.done ? doneStyles : {}}>{task.title}</span>\r\n          <button onClick={this.props.removeTask.bind(this, task.id)} className=\"btn btn-sm text-danger float-right\">&times;</button>\r\n        </div>    \r\n        <p>{task.description}</p>   \r\n      </li>\r\n    )\r\n  }\r\n}\r\nTask.propTypes = {\r\n  task: PropTypes.object.isRequired,\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    removeTask(payload){\r\n      dispatch(removeTask(payload))\r\n    },\r\n    toggleTask(payload) {\r\n      dispatch(toggleTask(payload))\r\n    },\r\n  }\r\n}\r\n\r\nexport default connect(null , mapDispatchToProps)(Task);","import { ADD_TASK } from '../types/tasks';\r\n\r\nexport const addTask = payload => ({\r\n  type: ADD_TASK,\r\n  payload,\r\n})\r\n\r\n\r\nexport const removeTask = payload => ({\r\n  type: 'REMOVE_TASK',\r\n  payload,\r\n})\r\n\r\nexport const toggleTask = payload => ({\r\n  type: 'TOGGLE_TASK',\r\n  payload,\r\n})","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Task from '../Task/Task';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass Tasks extends Component {\r\n  render(){\r\n    \r\n    const tasks = this.props.tasks.map( task =>\r\n      <Task key={task.id} task={task} />\r\n    )\r\n\r\n    let list = <i>Empty list</i> \r\n    \r\n    if(tasks.length)\r\n      {list = <ul className=\"list-group\">{tasks}</ul> }     \r\n\r\n    return (\r\n      <>\r\n        <h4 className=\"mb-3\">Tasks: {this.props.tasks.length}</h4>\r\n        {list}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nTasks.propTypes = {\r\n  tasks: PropTypes.array.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    tasks: state.tasks.tasks\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, null)(Tasks);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { addTask } from \"../../store/actions/tasks\";\r\n\r\n\r\nclass TaskForm extends Component {\r\n  state = {\r\n    title: '',\r\n    description: '',\r\n  }\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault()\r\n    const payload = {\r\n      title: this.state.title,\r\n      description: this.state.description,\r\n    }\r\n    this.props.addTask(payload)\r\n    this.setState({\r\n      title: '',\r\n      description: '',\r\n    })\r\n  }\r\n\r\n  onChange = e => {\r\n    const { name , value } = e.target;\r\n    this.setState({\r\n      [name]: value\r\n    })  \r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <form className=\"py-3\" onSubmit={this.onSubmit}>\r\n        <h5>Create a task</h5>\r\n        <div className=\"input-group\">\r\n          <input name=\"title\" type=\"text\" className=\"form-control\" onChange={this.onChange} value={this.state.title} placeholder=\"Task title\"/>\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <textarea name=\"description\" className=\"form-control\" onChange={this.onChange} value={this.state.description} placeholder=\"Task description\" aria-label=\"With textarea\"></textarea>\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <button type=\"submit\" className=\"btn btn-success mt-3\">Save a task</button>\r\n        </div>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addTask(payload){\r\n      dispatch(addTask(payload))\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(TaskForm);","export const ADD_TASK = 'ADD_TASK';","import React, { Component } from 'react';\r\n\r\nimport Tasks from '../../components/Tasks/Tasks';\r\nimport TaskForm from \"../../components/TaskForm/TaskForm\";\r\n\r\n// import tasks from '../tasks.json';\r\n\r\nclass Home extends Component {\r\n  render(){\r\n    return (\r\n      <section className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-6\">\r\n            <TaskForm />\r\n          </div>\r\n          <div className=\"col-12 col-md-6\">          \r\n            <Tasks/>\r\n          </div> \r\n        </div>       \r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\n\r\nclass NotFound extends Component {\r\n  render(){\r\n    return (<p>404</p>)\r\n  }\r\n}\r\n\r\n\r\nexport default NotFound;","import { ADD_TASK } from \"../types/tasks\";\r\n\r\nconst initialState = {\r\n  tasks: [{\r\n    \"id\": 0,\r\n    \"title\": \"Task 1\",\r\n    \"description\": \"Laboris culpa qui veniam irure occaecat duis magna eu nisi irure quis eu.\\r\\n\",\r\n    \"done\": true\r\n  }, {\r\n    \"id\": 1,\r\n    \"title\": \"Task 2\",\r\n    \"description\": \"Laboris culpa qui veniam irure occaecat duis magna eu nisi irure quis eu.\\r\\n\",\r\n    \"done\": false\r\n  }]\r\n}\r\n\r\n\r\nconst tasks  = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case ADD_TASK:\r\n      return { \r\n        ...state,\r\n        tasks: [...state.tasks, {\r\n          id: state.tasks.length,\r\n          title: payload.title,\r\n          description: payload.description,\r\n          done: false\r\n        }]\r\n      }\r\n    \r\n    case 'REMOVE_TASK':\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter(task=>task.id !== payload)\r\n      }\r\n\r\n    case 'TOGGLE_TASK':    \r\n\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.map(task => {\r\n          if(task.id === payload)\r\n            task = {...task, done: !task.done}\r\n          return task\r\n        })\r\n      }\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default tasks;","import { combineReducers } from \"redux\";\r\nimport  tasks  from \"./tasks\";\r\n\r\n\r\n\r\nexport default combineReducers({tasks})","import { createStore } from \"redux\";\r\n\r\nimport reducers from \"./reducers/index\";\r\n\r\nexport default createStore(reducers)","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Home from \"./pages/Home/Home\";\nimport NotFound from \"./pages/NotFound/NotFound\";\nimport store from './store/store';\nimport { Provider } from \"react-redux\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route component={NotFound} />\n        </Switch>\n      </BrowserRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport './global.css';\nimport App from './App';\n\nconst container = document.getElementById('app');\n\nReactDOM.render(<App />, container);\n"],"sourceRoot":""}